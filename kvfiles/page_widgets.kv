
#: import Window kivy.core.window.Window

<SelectableLabel>:
    text: ''
    markup: True
    color: app.theme_cls.text_color if not root.note else (10/255, 183 / 255 , 122 / 255 , 1)
    font_size: 32

    text_size: ((Window.width - 2 * icon_size) if not self.parent else self.parent.width) , None
    size: self.texture_size
    size_hint_y: None
    size_hint_x: None

    selection_color: (66/255, 170/255, 1, 0.2)

    on_ref_press: 
        root.on_refference(*args)


<PresentableLabel>:
    text: ""

<OneElementContainer>:
    background_color: (0,0,0,0)

    canvas.before:
        Color:
            rgba: self.background_color
        Rectangle:
            size: self.size[0], self.height + 20
            pos: self.pos[0], self.pos[1] - 10


<Paragraph>:
    text: ''
    markup: True
    valign: 'center'
    italic: root.cite
    font_name: root.get_font('NotoSans-Regular.ttf')

    on_parent:
        root.resolve_state()

<Space>:
    size_hint_y: None
    size: Window.width ,0.05 * Window.height

<Unknown>:
    text: ''
    color: (0,0,1,1)

<Mistake>:
    text: ''
    color: (1,0,0,1)

<ImageData>:
    size_hint_y: None
    size_hint_x: 1
    height: root.get_size(icon_size)[1]

    AnchorLayout:
        size: self.parent.size
        pos: self.parent.pos
        anchor_x: "center"
        anchor_y: "center"

        Widget:
            size_hint_x: None
            size: root.get_size(icon_size)
            pos: self.parent.pos

            canvas:
                Color:
                    # set alpha to 1
                    rgba: (1,1,1,0.5) if app.theme_cls.theme_style == 'Dark' else (1,1,1,1)
                Rectangle:
                    texture: root.texture
                    size: self.size
                    pos: self.pos

<Title>:
    text: ''
    font_size: 40
    markup: True
    halign: 'center'
    valign: 'center'
    font_name: root.get_font('NotoSans-Bold.ttf')

    on_parent:
        root.resolve_state()

<NotesDelimeter>:
    size_hint_y: None
    size_hint_x: None
    size: (Window.width - 2 * icon_size) if not self.parent else self.parent.width ,0.02 * Window.height 

    canvas:
        Color:
            rgba: (0,0.5,1,1) if app.theme_cls.theme_style == 'Light' else (135/255, 206/255, 250/255, 1)
        Line:
            points: self.pos[0], self.pos[1], self.pos[0] + self.size[0], self.pos[1]
            width: 0.75

<Note>:
    text: ''
    color: (10/255, 183 / 255 , 122 / 255 , 1)    
    halign: 'left'
    valign: 'center'

<SubTitle>:
    text: ''
    halign: 'center'
    valign: 'center'

    on_parent:
        if root.cite: self.font_size = 30
    
<Poem_line>:
    text: ''
    padding_x: 0.1 * Window.width

    on_parent:
        self.resolve_state()

<Stanza_empty>:
    size: Window.width ,0.02 * Window.height

<Author>:
    halign: 'right'
    italic: True

    on_parent:
        root.resolve_state()

<Text>:
    halign: "left"

    on_parent:
        root.resolve_state()


<SelectablePair>:
    cols: 2
    height:root.child.texture_size[1]
    width: (Window.width - 2 * icon_size) if not self.parent else self.parent.width
    size_hint_y: None
    size_hint_x: None
    spacing: 8
    padding: [0,0,10,0]

    Space:
        size_hint_x: root.pad
        size_hint_y: None
        height: root.child.height

    OneElementContainer:
        anchor_x: 'left'
        anchor_y: "bottom"
        
        on_parent:
            if self.parent: self.add_widget(root.child)

<Annotation_empty>:
    height: 0.04 * Window.height

<Title_empty>:
    height: 0.02 * Window.height

<BoxLayoutSelectableContainer>:
    height: self.minimum_height


<Html_Entity>:
    text: ""
    background_color: (0,0,0,0)
    color: app.theme_cls.text_color

    canvas.before:
        Color:
            rgba: self.background_color
        Rectangle:
            size: self.size[0], self.height + 20
            pos: self.pos[0], self.pos[1] - 10

    on_parent:
        root.resolve_css_properties()

<HTML_Paragraph>:
    text: ''
    markup: True
    valign: 'center'

<Link>:
    size_hint_y: None
    size: Window.width ,5

    canvas:
        Color:
            rgba: (1,0,0,0.2)
        Rectangle:
            size: self.size[0], self.height + 20
            pos: self.pos[0], self.pos[1] - 10

<HtmlDivider>:
    height: 2
    canvas: 
        Color:
            rgba: app.theme_cls.text_color
        Rectangle:
            size: self.size
            pos: self.pos

<ListItem>:
    id: root_list_item
    height: max(sign.width, content_container.height)
    width: self.parent.width if self.parent else (Window.width - 2 * icon_size)
    size_hint_y: None
    size_hint_x: None
    orientation: "horizontal"

    OneElementContainer:
        id: sign
        width: Window.width / 20
        size_hint_x: None
        height: root.height
        anchor_x: 'center'
        anchor_y: 'center'
        
        Text:
            text: "*"
            halign: 'center'
    
    BoxLayoutSelectableContainer:
        id: content_container
        size_hint_y: None
        size_hint_x: None
        width: root_list_item.width - sign.width
        children: []
        orientation: "vertical"
        spacing: 5
        
        on_parent:
            root.work_children(self, root.list_items)

<TableRow>:
    orientation: "horizontal"

    canvas:
        Color:
            rgba: (1,0,1, 0.3)
        Rectangle:
            size: self.size
            pos: self.pos
    

